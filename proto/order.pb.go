// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package com_ta04_srv_order

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Order is a message for order
type Order struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId            int32    `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               bool     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetProductId() int32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *Order) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

// IndexOrderRequest is a message for requesting all orders
type IndexOrdersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexOrdersRequest) Reset()         { *m = IndexOrdersRequest{} }
func (m *IndexOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*IndexOrdersRequest) ProtoMessage()    {}
func (*IndexOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *IndexOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexOrdersRequest.Unmarshal(m, b)
}
func (m *IndexOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexOrdersRequest.Marshal(b, m, deterministic)
}
func (m *IndexOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexOrdersRequest.Merge(m, src)
}
func (m *IndexOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_IndexOrdersRequest.Size(m)
}
func (m *IndexOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexOrdersRequest proto.InternalMessageInfo

type Response struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Orders               []*Order `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

// Error is a message for errors
type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "com.ta04.srv.order.Order")
	proto.RegisterType((*IndexOrdersRequest)(nil), "com.ta04.srv.order.IndexOrdersRequest")
	proto.RegisterType((*Response)(nil), "com.ta04.srv.order.Response")
	proto.RegisterType((*Error)(nil), "com.ta04.srv.order.Error")
}

func init() {
	proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077)
}

var fileDescriptor_cd01338c35d87077 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcf, 0x4e, 0xfa, 0x40,
	0x10, 0xfe, 0x95, 0xd2, 0x42, 0xa7, 0xe4, 0x77, 0x98, 0x18, 0xad, 0x46, 0x13, 0xd2, 0x83, 0xe1,
	0xb4, 0x2a, 0xea, 0x1b, 0xf8, 0xaf, 0x27, 0x93, 0x25, 0x9c, 0x4d, 0xed, 0x4e, 0xb0, 0x07, 0xd8,
	0xba, 0xbb, 0x45, 0x7d, 0x06, 0x1f, 0xc2, 0x57, 0x35, 0x1d, 0x20, 0x31, 0x01, 0xf4, 0xc0, 0x6d,
	0xfe, 0x7c, 0xf3, 0x7d, 0xdf, 0xcc, 0x66, 0x21, 0xd6, 0x46, 0x91, 0x11, 0x95, 0xd1, 0x4e, 0x23,
	0x16, 0x7a, 0x2a, 0x5c, 0x7e, 0x7e, 0x25, 0xac, 0x99, 0x0b, 0xee, 0xa4, 0x13, 0x08, 0x1e, 0x9b,
	0x00, 0xff, 0x43, 0xab, 0x54, 0x89, 0xd7, 0xf7, 0x06, 0x81, 0x6c, 0x95, 0x0a, 0x4f, 0x00, 0x2a,
	0xa3, 0x55, 0x5d, 0xb8, 0xa7, 0x52, 0x25, 0x2d, 0xae, 0x47, 0xcb, 0x4a, 0xa6, 0xf0, 0x00, 0x3a,
	0xb5, 0x25, 0xd3, 0xf4, 0x7c, 0xee, 0x85, 0x4d, 0x9a, 0x29, 0xdc, 0x87, 0xd0, 0xba, 0xdc, 0xd5,
	0x36, 0x69, 0xf7, 0xbd, 0x41, 0x57, 0x2e, 0xb3, 0x74, 0x0f, 0x30, 0x9b, 0x29, 0x7a, 0x67, 0x35,
	0x2b, 0xe9, 0xb5, 0x26, 0xeb, 0xd2, 0x2f, 0x0f, 0xba, 0x92, 0x6c, 0xa5, 0x67, 0x96, 0xf0, 0x0c,
	0x02, 0x36, 0xc5, 0x2e, 0xe2, 0xe1, 0xa1, 0x58, 0xf7, 0x2b, 0x78, 0x5c, 0x2e, 0x70, 0xcd, 0x00,
	0x19, 0xa3, 0x0d, 0xdb, 0xdb, 0x32, 0x70, 0xdb, 0x00, 0xe4, 0x02, 0x87, 0x17, 0x10, 0x72, 0xd5,
	0x26, 0x7e, 0xdf, 0xff, 0x5d, 0x62, 0x09, 0x4c, 0xaf, 0x21, 0x60, 0x0a, 0x44, 0x68, 0x17, 0x5a,
	0x11, 0x9b, 0x8b, 0x24, 0xc7, 0x98, 0x40, 0x67, 0x4a, 0xd6, 0xe6, 0x13, 0x62, 0x0b, 0x91, 0x5c,
	0xa5, 0xc3, 0x4f, 0x1f, 0x7a, 0x4c, 0x34, 0x22, 0x33, 0x2f, 0x0b, 0xc2, 0x31, 0xc4, 0x3f, 0xf6,
	0xc7, 0xd3, 0x4d, 0xca, 0xeb, 0x07, 0x3a, 0x3a, 0xde, 0x84, 0x5b, 0x5d, 0x2c, 0xfd, 0x87, 0x77,
	0x10, 0x8d, 0x5e, 0xf4, 0xdb, 0xe2, 0x0d, 0xb7, 0xaf, 0xf3, 0x27, 0xcf, 0x3d, 0xc0, 0xc8, 0x69,
	0x43, 0x3b, 0x13, 0x3d, 0x40, 0x3c, 0xae, 0x54, 0xee, 0x76, 0x67, 0xca, 0xa0, 0x77, 0x43, 0xd6,
	0x19, 0xfd, 0xb1, 0x2b, 0xd5, 0x73, 0xc8, 0x1f, 0xe0, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x44,
	0x45, 0x3f, 0x75, 0x0f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for OrderService service

type OrderServiceClient interface {
	// Method to index all orders
	IndexOrders(ctx context.Context, in *IndexOrdersRequest, opts ...client.CallOption) (*Response, error)
	// Method to show a order
	ShowOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// Method to store a new order
	StoreOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// Method to update a order's information
	UpdateOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// Method to delete a order
	DestroyOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
}

type orderServiceClient struct {
	c           client.Client
	serviceName string
}

func NewOrderServiceClient(serviceName string, c client.Client) OrderServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.ta04.srv.order"
	}
	return &orderServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *orderServiceClient) IndexOrders(ctx context.Context, in *IndexOrdersRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.IndexOrders", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ShowOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.ShowOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) StoreOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.StoreOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.UpdateOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DestroyOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.DestroyOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceHandler interface {
	// Method to index all orders
	IndexOrders(context.Context, *IndexOrdersRequest, *Response) error
	// Method to show a order
	ShowOrder(context.Context, *Order, *Response) error
	// Method to store a new order
	StoreOrder(context.Context, *Order, *Response) error
	// Method to update a order's information
	UpdateOrder(context.Context, *Order, *Response) error
	// Method to delete a order
	DestroyOrder(context.Context, *Order, *Response) error
}

func RegisterOrderServiceHandler(s server.Server, hdlr OrderServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&OrderService{hdlr}, opts...))
}

type OrderService struct {
	OrderServiceHandler
}

func (h *OrderService) IndexOrders(ctx context.Context, in *IndexOrdersRequest, out *Response) error {
	return h.OrderServiceHandler.IndexOrders(ctx, in, out)
}

func (h *OrderService) ShowOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.ShowOrder(ctx, in, out)
}

func (h *OrderService) StoreOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.StoreOrder(ctx, in, out)
}

func (h *OrderService) UpdateOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.UpdateOrder(ctx, in, out)
}

func (h *OrderService) DestroyOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.DestroyOrder(ctx, in, out)
}
