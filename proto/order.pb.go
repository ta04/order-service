// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package com_ta04_srv_order

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Order is a message for order
type Order struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId            int32    `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetProductId() int32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *Order) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// User is a message for user
type User struct {
	Id                     int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName              string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName               string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Username               string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password               string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	EmailAddress           string   `protobuf:"bytes,6,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	PhoneNumber            string   `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth            string   `protobuf:"bytes,8,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Address                string   `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Role                   string   `protobuf:"bytes,10,opt,name=role,proto3" json:"role,omitempty"`
	CreditCardNumber       string   `protobuf:"bytes,11,opt,name=credit_card_number,json=creditCardNumber,proto3" json:"credit_card_number,omitempty"`
	CreditCardType         string   `protobuf:"bytes,12,opt,name=credit_card_type,json=creditCardType,proto3" json:"credit_card_type,omitempty"`
	CreditCardExpiredMonth string   `protobuf:"bytes,13,opt,name=credit_card_expired_month,json=creditCardExpiredMonth,proto3" json:"credit_card_expired_month,omitempty"`
	CreditCardExpiredYear  string   `protobuf:"bytes,14,opt,name=credit_card_expired_year,json=creditCardExpiredYear,proto3" json:"credit_card_expired_year,omitempty"`
	CreditCardCvv          string   `protobuf:"bytes,15,opt,name=credit_card_cvv,json=creditCardCvv,proto3" json:"credit_card_cvv,omitempty"`
	Status                 string   `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetCreditCardNumber() string {
	if m != nil {
		return m.CreditCardNumber
	}
	return ""
}

func (m *User) GetCreditCardType() string {
	if m != nil {
		return m.CreditCardType
	}
	return ""
}

func (m *User) GetCreditCardExpiredMonth() string {
	if m != nil {
		return m.CreditCardExpiredMonth
	}
	return ""
}

func (m *User) GetCreditCardExpiredYear() string {
	if m != nil {
		return m.CreditCardExpiredYear
	}
	return ""
}

func (m *User) GetCreditCardCvv() string {
	if m != nil {
		return m.CreditCardCvv
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// IndexOrderRequest is a message for IndexOrders
type IndexOrdersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexOrdersRequest) Reset()         { *m = IndexOrdersRequest{} }
func (m *IndexOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*IndexOrdersRequest) ProtoMessage()    {}
func (*IndexOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *IndexOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexOrdersRequest.Unmarshal(m, b)
}
func (m *IndexOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexOrdersRequest.Marshal(b, m, deterministic)
}
func (m *IndexOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexOrdersRequest.Merge(m, src)
}
func (m *IndexOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_IndexOrdersRequest.Size(m)
}
func (m *IndexOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexOrdersRequest proto.InternalMessageInfo

// Response is a response message
type Response struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Orders               []*Order `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

// Error is an error message
type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "com.ta04.srv.order.Order")
	proto.RegisterType((*User)(nil), "com.ta04.srv.order.User")
	proto.RegisterType((*IndexOrdersRequest)(nil), "com.ta04.srv.order.IndexOrdersRequest")
	proto.RegisterType((*Response)(nil), "com.ta04.srv.order.Response")
	proto.RegisterType((*Error)(nil), "com.ta04.srv.order.Error")
}

func init() {
	proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077)
}

var fileDescriptor_cd01338c35d87077 = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x4e, 0x13, 0x41,
	0x14, 0xb6, 0xf4, 0x87, 0xee, 0x69, 0x0b, 0xe4, 0xa8, 0x38, 0xa0, 0x26, 0x58, 0x13, 0xc2, 0x85,
	0xa9, 0x8a, 0x1a, 0xe3, 0xa5, 0xfc, 0xa8, 0xbd, 0x10, 0x92, 0x45, 0x2e, 0xbc, 0xda, 0x0c, 0x3b,
	0x07, 0xba, 0x09, 0xdb, 0x59, 0x67, 0xa6, 0x0b, 0x7d, 0x1a, 0x5f, 0xc1, 0x07, 0xf2, 0x61, 0xcc,
	0x9c, 0xed, 0xca, 0x1a, 0x8a, 0x5c, 0x70, 0x37, 0xe7, 0xfb, 0x39, 0x5f, 0x3b, 0xfb, 0xed, 0x42,
	0x47, 0x1b, 0x45, 0x66, 0x90, 0x19, 0xed, 0x34, 0x62, 0xac, 0xd3, 0x81, 0x93, 0xaf, 0xde, 0x0e,
	0xac, 0xc9, 0x07, 0xcc, 0xf4, 0xcf, 0xa0, 0x79, 0xe8, 0x0f, 0xb8, 0x04, 0x0b, 0x89, 0x12, 0xb5,
	0x8d, 0xda, 0x56, 0x33, 0x5c, 0x48, 0x14, 0x3e, 0x05, 0xc8, 0x8c, 0x56, 0x93, 0xd8, 0x45, 0x89,
	0x12, 0x0b, 0x8c, 0x07, 0x33, 0x64, 0xa8, 0xf0, 0x11, 0x2c, 0x4e, 0x2c, 0x19, 0xcf, 0xd5, 0x99,
	0x6b, 0xf9, 0x71, 0xa8, 0x70, 0x15, 0x5a, 0xd6, 0x49, 0x37, 0xb1, 0xa2, 0xb1, 0x51, 0xdb, 0x0a,
	0xc2, 0xd9, 0xd4, 0xff, 0xd5, 0x80, 0xc6, 0xb1, 0x9d, 0x1f, 0x74, 0x9a, 0x18, 0xeb, 0xa2, 0xb1,
	0x4c, 0x89, 0x83, 0x82, 0x30, 0x60, 0xe4, 0x40, 0xa6, 0x84, 0x8f, 0x21, 0x38, 0x97, 0x25, 0x5b,
	0x67, 0xb6, 0xed, 0x01, 0x26, 0xd7, 0xa1, 0xed, 0x63, 0x99, 0x2b, 0xe2, 0xfe, 0xce, 0x9e, 0xcb,
	0xa4, 0xb5, 0x17, 0xda, 0x28, 0xd1, 0x2c, 0xb8, 0x72, 0xc6, 0xe7, 0xd0, 0xa3, 0x54, 0x26, 0xe7,
	0x91, 0x54, 0xca, 0x90, 0xb5, 0xa2, 0xc5, 0x82, 0x2e, 0x83, 0x1f, 0x0b, 0x0c, 0x9f, 0x41, 0x37,
	0x1b, 0xe9, 0x31, 0x45, 0xe3, 0x49, 0x7a, 0x42, 0x46, 0x2c, 0xb2, 0xa6, 0xc3, 0xd8, 0x01, 0x43,
	0xd8, 0x87, 0x9e, 0x92, 0x8e, 0x22, 0x7d, 0x1a, 0x9d, 0x24, 0xc6, 0x8d, 0x44, 0xbb, 0xd0, 0x78,
	0xf0, 0xf0, 0x74, 0xc7, 0x43, 0x28, 0x60, 0xb1, 0x4c, 0x09, 0x98, 0x2d, 0x47, 0x44, 0x68, 0x18,
	0x7d, 0x4e, 0x02, 0x18, 0xe6, 0x33, 0xbe, 0x00, 0x8c, 0x0d, 0xa9, 0xc4, 0x45, 0xb1, 0x34, 0xaa,
	0x8c, 0xee, 0xb0, 0x62, 0xa5, 0x60, 0x76, 0xa5, 0x51, 0xb3, 0xfc, 0x2d, 0x58, 0xa9, 0xaa, 0xdd,
	0x34, 0x23, 0xd1, 0x65, 0xed, 0xd2, 0x95, 0xf6, 0xdb, 0x34, 0x23, 0xfc, 0x00, 0x6b, 0x55, 0x25,
	0x5d, 0x66, 0x89, 0x21, 0x15, 0xa5, 0x7a, 0xec, 0x46, 0xa2, 0xc7, 0x96, 0xd5, 0x2b, 0xcb, 0x7e,
	0x41, 0x7f, 0xf5, 0x2c, 0xbe, 0x07, 0x31, 0xcf, 0x3a, 0x25, 0x69, 0xc4, 0x12, 0x3b, 0x1f, 0x5e,
	0x73, 0x7e, 0x27, 0x69, 0x70, 0x13, 0x96, 0xab, 0xc6, 0x38, 0xcf, 0xc5, 0x32, 0xeb, 0x7b, 0x57,
	0xfa, 0xdd, 0x3c, 0xaf, 0x54, 0x66, 0xe5, 0x9f, 0xca, 0x3c, 0x00, 0x1c, 0x8e, 0x15, 0x5d, 0x72,
	0x41, 0x6d, 0x48, 0x3f, 0x26, 0x64, 0x5d, 0xff, 0x67, 0x0d, 0xda, 0x21, 0xd9, 0x4c, 0x8f, 0x2d,
	0xe1, 0x4b, 0x68, 0x72, 0x8f, 0xb9, 0x4f, 0x9d, 0xed, 0xb5, 0xc1, 0xf5, 0x8a, 0x0f, 0xd8, 0x1e,
	0x16, 0x3a, 0x6f, 0x20, 0x63, 0xb4, 0xe1, 0xa2, 0xdd, 0x60, 0xd8, 0xf7, 0x82, 0xb0, 0xd0, 0xe1,
	0x6b, 0x68, 0x31, 0x6a, 0x45, 0x7d, 0xa3, 0xfe, 0xff, 0x88, 0x99, 0xb0, 0xff, 0x0e, 0x9a, 0xbc,
	0xc2, 0x3f, 0xe0, 0x58, 0x2b, 0xe2, 0x1f, 0x17, 0x84, 0x7c, 0xf6, 0x75, 0x48, 0xc9, 0x5a, 0x79,
	0x56, 0x76, 0xbd, 0x1c, 0xb7, 0x7f, 0xd7, 0xa1, 0xcb, 0x8b, 0x8e, 0xc8, 0xe4, 0x49, 0x4c, 0x78,
	0x0c, 0x9d, 0xca, 0xff, 0xc7, 0xcd, 0x79, 0xc9, 0xd7, 0x2f, 0x68, 0xfd, 0xc9, 0x3c, 0x5d, 0x79,
	0x63, 0xfd, 0x7b, 0x78, 0x08, 0xf7, 0x2b, 0xae, 0x9d, 0xa9, 0x7f, 0x2b, 0x87, 0x7b, 0x28, 0xe6,
	0xd9, 0x3c, 0x77, 0xeb, 0xc2, 0x4f, 0x10, 0x1c, 0x8d, 0xf4, 0x45, 0xf1, 0x1d, 0xb9, 0xf9, 0x7e,
	0x6e, 0xdd, 0xf3, 0x19, 0xe0, 0xc8, 0x69, 0x43, 0x77, 0x5e, 0xf4, 0x05, 0x3a, 0xc7, 0x19, 0xbf,
	0x83, 0x77, 0xdd, 0x34, 0x84, 0xee, 0x1e, 0x59, 0x67, 0xf4, 0xf4, 0xae, 0xab, 0x4e, 0x5a, 0xfc,
	0x11, 0x7e, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x25, 0x57, 0x2f, 0x93, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for OrderService service

type OrderServiceClient interface {
	// IndexOrders is a method to index all orders
	IndexOrders(ctx context.Context, in *IndexOrdersRequest, opts ...client.CallOption) (*Response, error)
	// IndexOrdersByUserID is a method to index all orders by the user's id
	IndexOrdersByUserID(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	// ShowOrder is a method to show a order
	ShowOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// StoreOrder is a method to store a new order
	StoreOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// UpdateOrder is a method to update a order
	UpdateOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
	// DestroyOrder is a method to delete a order
	DestroyOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error)
}

type orderServiceClient struct {
	c           client.Client
	serviceName string
}

func NewOrderServiceClient(serviceName string, c client.Client) OrderServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.ta04.srv.order"
	}
	return &orderServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *orderServiceClient) IndexOrders(ctx context.Context, in *IndexOrdersRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.IndexOrders", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) IndexOrdersByUserID(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.IndexOrdersByUserID", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ShowOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.ShowOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) StoreOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.StoreOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.UpdateOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) DestroyOrder(ctx context.Context, in *Order, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.DestroyOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceHandler interface {
	// IndexOrders is a method to index all orders
	IndexOrders(context.Context, *IndexOrdersRequest, *Response) error
	// IndexOrdersByUserID is a method to index all orders by the user's id
	IndexOrdersByUserID(context.Context, *User, *Response) error
	// ShowOrder is a method to show a order
	ShowOrder(context.Context, *Order, *Response) error
	// StoreOrder is a method to store a new order
	StoreOrder(context.Context, *Order, *Response) error
	// UpdateOrder is a method to update a order
	UpdateOrder(context.Context, *Order, *Response) error
	// DestroyOrder is a method to delete a order
	DestroyOrder(context.Context, *Order, *Response) error
}

func RegisterOrderServiceHandler(s server.Server, hdlr OrderServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&OrderService{hdlr}, opts...))
}

type OrderService struct {
	OrderServiceHandler
}

func (h *OrderService) IndexOrders(ctx context.Context, in *IndexOrdersRequest, out *Response) error {
	return h.OrderServiceHandler.IndexOrders(ctx, in, out)
}

func (h *OrderService) IndexOrdersByUserID(ctx context.Context, in *User, out *Response) error {
	return h.OrderServiceHandler.IndexOrdersByUserID(ctx, in, out)
}

func (h *OrderService) ShowOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.ShowOrder(ctx, in, out)
}

func (h *OrderService) StoreOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.StoreOrder(ctx, in, out)
}

func (h *OrderService) UpdateOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.UpdateOrder(ctx, in, out)
}

func (h *OrderService) DestroyOrder(ctx context.Context, in *Order, out *Response) error {
	return h.OrderServiceHandler.DestroyOrder(ctx, in, out)
}
